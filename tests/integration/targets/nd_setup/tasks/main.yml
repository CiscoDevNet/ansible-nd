# Test code for the ND modules
# Copyright: (c) 2023, Shreyas Srish (@shrsr) <ssrish@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Install ND in check mode
  cisco.nd.nd_setup:
    output_level: debug
    cluster_name: cluster-one
    dns_server: "{{ dns_server }}"
    dns_search_domain: cisco.com
    app_network: "{{ app_network }}"
    service_network: "{{ service_network }}"
    ntp_config:
      servers:
        - ntp_host: "{{ ntp_server }}"
          ntp_key_id: 1
          preferred: true
      keys:
        - ntp_key_id: 1
          ntp_key: "ntp_secure_key"
          authentication_type: "AES128CMAC"
          trusted: true
    nodes:
      - hostname: Test
        serial_number: "{{ serial_number }}"
        management_ip_address: "{{ management_ip_address }}"
        username: "{{ deployment_username | default('rescue-user') }}"
        password: "{{ deployment_password }}"
        management_network: 
          ipv4_address: "{{ management_ip }}"
          ipv4_gateway: "{{ management_gateway }}"
        data_network:
          ipv4_address: "{{ data_ip }}"
          ipv4_gateway: "{{ data_gateway }}"
  check_mode: true
  register: cluster_cm

- name: Install ND with an in-valid length of cluster name
  cisco.nd.nd_setup:
    output_level: debug
    cluster_name: clusteroneclusteroneclusteroneclusteroneclusteroneclusteroneclusterone
    ntp_server: "{{ ntp_server }}"
    dns_server: "{{ dns_server }}"
    dns_search_domain: cisco.com
    app_network: "{{ app_network }}"
    service_network: "{{ service_network }}"
    nodes:
      - hostname: Test
        serial_number: "{{ serial_number }}"
        management_ip_address: "{{ management_ip_address }}"
        username: "{{ deployment_username | default('rescue-user') }}"
        password: "{{ deployment_password }}"
        management_network: 
          ipv4_address: "{{ management_ip }}"
          ipv4_gateway: "{{ management_gateway }}"
        data_network:
          ipv4_address: "{{ data_ip }}"
          ipv4_gateway: "{{ data_gateway }}"
  ignore_errors: true
  register: cluster_name_length_error

- name: Install ND with in-valid characters in cluster name
  cisco.nd.nd_setup:
    output_level: debug
    cluster_name: cluster_one
    ntp_server: "{{ ntp_server }}"
    dns_server: "{{ dns_server }}"
    dns_search_domain: cisco.com
    app_network: "{{ app_network }}"
    service_network: "{{ service_network }}"
    nodes:
      - hostname: Test
        serial_number: "{{ serial_number }}"
        management_ip_address: "{{ management_ip_address }}"
        username: "{{ deployment_username | default('rescue-user') }}"
        password: "{{ deployment_password }}"
        management_network: 
          ipv4_address: "{{ management_ip }}"
          ipv4_gateway: "{{ management_gateway }}"
        data_network:
          ipv4_address: "{{ data_ip }}"
          ipv4_gateway: "{{ data_gateway }}"
  ignore_errors: true
  register: cluster_name_invalid_chars

- name: Install ND with a hyphen in the beginning/end of the cluster name
  cisco.nd.nd_setup:
    output_level: debug
    cluster_name: clusterone-
    ntp_server: "{{ ntp_server }}"
    dns_server: "{{ dns_server }}"
    dns_search_domain: cisco.com
    app_network: "{{ app_network }}"
    service_network: "{{ service_network }}"
    nodes:
      - hostname: Test
        serial_number: "{{ serial_number }}"
        management_ip_address: "{{ management_ip_address }}"
        username: "{{ deployment_username | default('rescue-user') }}"
        password: "{{ deployment_password }}"
        management_network: 
          ipv4_address: "{{ management_ip }}"
          ipv4_gateway: "{{ management_gateway }}"
        data_network:
          ipv4_address: "{{ data_ip }}"
          ipv4_gateway: "{{ data_gateway }}"
  ignore_errors: true
  register: cluster_name_invalid_hyphen

- name: Install ND in normal mode
  cisco.nd.nd_setup:
    output_level: debug
    cluster_name: cluster-one
    dns_server: "{{ dns_server }}"
    dns_search_domain: cisco.com
    app_network: "{{ app_network }}"
    service_network: "{{ service_network }}"
    ntp_config:
      servers:
        - ntp_host: "{{ ntp_server }}"
          ntp_key_id: 1
          preferred: true
      keys:
          - ntp_key_id: 1
            ntp_key: "ntp_secure_key"
            authentication_type: "AES128CMAC"
            trusted: true
    nodes:
      - hostname: Test
        serial_number: "{{ serial_number }}"
        management_ip_address: "{{ management_ip_address }}"
        username: "{{ deployment_username | default('rescue-user') }}"
        password: "{{ deployment_password }}"
        management_network: 
          ipv4_address: "{{ management_ip }}"
          ipv4_gateway: "{{ management_gateway }}"
        data_network:
          ipv4_address: "{{ data_ip }}"
          ipv4_gateway: "{{ data_gateway }}"
          vlan: 1
  register: cluster_nm

- name: Wait for 30 seconds to establish connection
  ansible.builtin.pause:
    seconds: 30

- name: Check installation status of ND
  cisco.nd.nd_setup:
    state: query
  register: installation_status
  until: (installation_status.current.state is defined) and (installation_status.current.state == "Completed")
  retries: 100
  delay: 18

- name: Verify all assertions
  assert:
    that:
      - cluster_name_length_error.msg == "A length of 1 to 63 characters is allowed."
      - cluster_name_invalid_chars.msg == "Valid characters include letters, digits and hyphen."
      - cluster_name_invalid_hyphen.msg == "The name cannot start or end with a hyphen."
      - cluster_cm.current.clusterConfig.appNetwork == "{{ app_network }}"
      - cluster_cm.current.clusterConfig.nameServers.0 == "{{ dns_server }}"
      - cluster_cm.current.clusterConfig.ntpConfig.servers.0.host == "{{ ntp_server }}"
      - cluster_cm.current.clusterConfig.ntpConfig.servers.0.keyID == 1
      - cluster_cm.current.clusterConfig.ntpConfig.servers.0.prefer == true
      - cluster_cm.current.clusterConfig.searchDomains.0 == "cisco.com"
      - cluster_cm.current.clusterConfig.serviceNetwork == "{{ service_network }}"
      - cluster_cm.current.nodes.0.dataNetwork.gateway == "{{ data_gateway }}"
      - cluster_cm.current.nodes.0.dataNetwork.ipSubnet == "{{ data_ip }}"
      - cluster_cm.current.nodes.0.managementNetwork.gateway == "{{ management_gateway }}"
      - cluster_cm.current.nodes.0.managementNetwork.ipSubnet == "{{ management_ip }}"
      - cluster_cm.current.nodes.0.serialNumber == "{{ serial_number }}"
      - cluster_cm.current.nodes.0.hostName == "Test"
      - cluster_nm.current.clusterConfig.appNetwork == "{{ app_network }}"
      - cluster_nm.current.clusterConfig.nameServers.0 == "{{ dns_server }}"
      - cluster_nm.current.clusterConfig.ntpConfig.servers.0.host == "{{ ntp_server }}"
      - cluster_nm.current.clusterConfig.ntpConfig.servers.0.keyID == 1
      - cluster_nm.current.clusterConfig.ntpConfig.servers.0.prefer == true
      - cluster_nm.current.clusterConfig.searchDomains.0 == "cisco.com"
      - cluster_nm.current.clusterConfig.serviceNetwork == "{{ service_network }}"
      - cluster_nm.current.nodes.0.dataNetwork.gateway == "{{ data_gateway }}"
      - cluster_nm.current.nodes.0.dataNetwork.ipSubnet == "{{ data_ip }}"
      - cluster_nm.current.nodes.0.managementNetwork.gateway == "{{ management_gateway }}"
      - cluster_nm.current.nodes.0.managementNetwork.ipSubnet == "{{ management_ip }}"
      - cluster_nm.current.nodes.0.serialNumber == "{{ serial_number }}"
      - cluster_nm.current.nodes.0.hostName == "Test"
      - installation_status.current.clusterConfig.appNetwork == "{{ app_network }}"
      - installation_status.current.clusterConfig.nameServers.0 == "{{ dns_server }}"
      - installation_status.current.clusterConfig.ntpServers.0 == "{{ ntp_server }}"
      - installation_status.current.clusterConfig.searchDomains.0 == "cisco.com"
      - installation_status.current.clusterConfig.serviceNetwork == "{{ service_network }}"
      - installation_status.current.nodes.0.dataNetwork.gateway == "{{ data_gateway }}"
      - installation_status.current.nodes.0.dataNetwork.ipSubnet == "{{ data_ip }}"
      - installation_status.current.nodes.0.managementNetwork.gateway == "{{ management_gateway }}"
      - installation_status.current.nodes.0.managementNetwork.ipSubnet == "{{ management_ip }}"
      - installation_status.current.nodes.0.serialNumber == "{{ serial_number }}"
      - installation_status.current.nodes.0.hostName == "Test"
      - installation_status.current.state == "Completed"
