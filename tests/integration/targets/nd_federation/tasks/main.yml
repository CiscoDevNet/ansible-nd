# Test code for the ND modules
# Copyright: (c) 2024, Anvitha Jain (@anvitha-jain) <anvjain@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# - name: Test that we have an Nexus Dashboard Insights Group and Site Name defined
#   fail:
#     msg: "Please define the following variables: insights_group, site_name."
#   when: insights_group is not defined or site_name is not defined

# SET VARS
- name: Set vars
  ansible.builtin.set_fact:
    nd_info: &nd_info
      output_level: '{{ site_output_level | default("debug") }}'

# CLEANUP ENVIRONMENT
- name: Delete federation
  cisco.nd.nd_federation:
    <<: *nd_info
    name: 'lh-dmz1-pod1-ndo-v402'
    state: absent

# ADD Federation
- name: Add ND federation (check mode)
  cisco.nd.nd_federation: &add_federation
    <<: *nd_info
    name: 'lh-dmz1-pod1-ndo-v402'
    state: present
  check_mode: True
  register: cm_add_federation

- name: Add ND federation (normal mode)
  cisco.nd.nd_federation:
    <<: *add_federation
    state: present
  register: nm_add_federation

# API creates federation on every POST request
- name: Add ND federation again
  cisco.nd.nd_federation:
    <<: *add_federation
    state: present
  register: add_federation_again

- name: Assertion check for adding ND federation 
  ansible.builtin.assert:
    that:
      - cm_add_federation is changed
      - nm_add_federation is changed
      - cm_add_federation.previous is none 
      - nm_add_federation.previous is none
      - cm_add_federation.current.spec.name == nm_add_federation.current.spec.name == 'lh-dmz1-pod1-ndo-v402'
      - add_federation_again.current.spec.name == 'lh-dmz1-pod1-ndo-v402'

# Query federation
- name: Get all federations
  cisco.nd.nd_federation:
    <<: *nd_info
    state: query
  register: query_all_federations

- name: Get a single federation
  cisco.nd.nd_federation:
    <<: *nd_info
    name: 'lh-dmz1-pod1-ndo-v402'
    state: query
  register: query_federation

- name: Assertion check for quering ND federation 
  ansible.builtin.assert:
    that:
      - query_all_federations is not changed
      - query_federation is not changed
      - query_federation.current.spec.name == 'lh-dmz1-pod1-ndo-v402'

# Remove Federation
- name: Delete federation (check mode)
  cisco.nd.nd_federation:
    <<: *nd_info
    name: 'lh-dmz1-pod1-ndo-v402'
    state: absent
  check_mode: True
  register: cm_remove_federation

- name: Delete federation (normal mode)
  cisco.nd.nd_federation: &remove_federation
    <<: *nd_info
    name: 'lh-dmz1-pod1-ndo-v402'
    state: absent
  register: nm_remove_federation

- name: Delete federation again
  cisco.nd.nd_federation:
    <<: *remove_federation
    state: absent
  register: remove_federation_again

- name: Assertion check for removing ND federation 
  ansible.builtin.assert:
    that:
      - cm_remove_federation is changed
      - nm_remove_federation is changed
      - cm_remove_federation.previous.spec.name == nm_remove_federation.previous.spec.name == 'lh-dmz1-pod1-ndo-v402'
      - remove_federation_again.previous is none