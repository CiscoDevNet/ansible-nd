# Test code for the nd modules
# Copyright: (c) 2022, Cindy Zhao (@cizhao) <cizhao@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    ndi_info: &ndi_info
      insights_group: '{{ insights_group }}'
    ndi_site: &ndi_site
      site: '{{ site_name }}'

# QUERY pre-change validation delta analysis results
- name: Query a pre_change analysis
  nd_pcv_delta_analysis: &nd_query
    <<: *ndi_info
    <<: *ndi_site
    name: manual
  register: query_pcv_delta_analysis_manual

- name: Verify query_pcv_delta_analysis_manual
  assert:
    that:
    - query_pcv_delta_analysis_manual is not changed
    - query_pcv_delta_analysis_manual.current.anomalies is defined
    - query_pcv_delta_analysis_manual.current.anomaly_count is defined
    - query_pcv_delta_analysis_manual.current.general is defined
    - query_pcv_delta_analysis_manual.current.unhealthy_resources is defined

- name: Query another pre_change analysis
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: pcv_by_file
  register: query_pcv_by_file_delta_analysis

- name: Verify query_pcv_by_file_delta_analysis
  assert:
    that:
    - query_pcv_by_file_delta_analysis is not changed
    - query_pcv_by_file_delta_analysis.current.anomalies is defined
    - query_pcv_by_file_delta_analysis.current.anomaly_count is defined
    - query_pcv_by_file_delta_analysis.current.general is defined
    - query_pcv_by_file_delta_analysis.current.unhealthy_resources is defined

- name: Validate a pre_change analysis
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: pcv_by_file
    state: validate
  ignore_errors: true
  register: validate_pcv_by_file_delta_analysis

- name: Verify validate_pcv_by_file_delta_analysis
  assert:
    that:
    - validate_pcv_by_file_delta_analysis.msg.startswith("Pre-change analysis failed.")

- name: Validate another pre_change analysis
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: add_contract
    state: validate
  ignore_errors: true
  register: validate_pcv_add_contract_delta_analysis

- name: Verify validate_pcv_add_contract_delta_analysis
  assert:
    that:
    - validate_pcv_add_contract_delta_analysis.msg.startswith("Pre-change analysis failed.")

- name: Query non_existing pre_change validation delta analysis result
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: non_existing
  ignore_errors: true
  register: query_non_existing

- name: Verify query_non_existing
  assert:
    that:
    - query_non_existing is not changed
    - query_non_existing.msg == "Pre-change validation non_existing not found"

# Delete pre-change job
- name: Delete a pre_change analysis to recreate
  cisco.nd.nd_pcv:
    <<: *nd_query
    name: vrf_with_overlapping_subnets
    state: absent

- name: Create a pre-change analysis to validate
  cisco.nd.nd_pcv:
    <<: *nd_query
    name: vrf_with_overlapping_subnets
    file: targets/nd_pcv_delta_analysis/tasks/vrf_with_overlapping_subnets.json
    state: present

- name: Query a pre_change analysis
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: vrf_with_overlapping_subnets
  ignore_errors: true
  register: query_pcv_update_epg_while_running

- name: Validate a pre_change analysis while running
  nd_pcv_delta_analysis:
    <<: *nd_query
    name: vrf_with_overlapping_subnets
    state: validate
  ignore_errors: true
  register: validate_pcv_update_epg_while_running

- name: Verify query_pcv_update_epg_while_running and validate_pcv_update_epg_while_running
  assert:
    that:
    - query_pcv_update_epg_while_running.msg == "Pre-change validation vrf_with_overlapping_subnets is not completed"
    - validate_pcv_update_epg_while_running.msg.startswith("Pre-change analysis failed.")